package cl.dsoft.car.data.entities;
// Generated 17-05-2020 20:45:18 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Alerta generated by hbm2java
 */
@Entity
@Table(name = "alerta", catalog = "car2")
public class Alerta implements java.io.Serializable {

	private Integer idAlerta;
	private MantencionBase mantencionBase;
	private Vehiculo vehiculo;
	private Integer km;
	private Date fecha;
	private Date fechaModificacion;
	private boolean borrado;

	public Alerta() {
	}

	public Alerta(MantencionBase mantencionBase, Vehiculo vehiculo, Date fechaModificacion, boolean borrado) {
		this.mantencionBase = mantencionBase;
		this.vehiculo = vehiculo;
		this.fechaModificacion = fechaModificacion;
		this.borrado = borrado;
	}

	public Alerta(MantencionBase mantencionBase, Vehiculo vehiculo, Integer km, Date fecha, Date fechaModificacion,
			boolean borrado) {
		this.mantencionBase = mantencionBase;
		this.vehiculo = vehiculo;
		this.km = km;
		this.fecha = fecha;
		this.fechaModificacion = fechaModificacion;
		this.borrado = borrado;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_alerta", unique = true, nullable = false)
	public Integer getIdAlerta() {
		return this.idAlerta;
	}

	public void setIdAlerta(Integer idAlerta) {
		this.idAlerta = idAlerta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_mantencion_base", nullable = false)
	public MantencionBase getMantencionBase() {
		return this.mantencionBase;
	}

	public void setMantencionBase(MantencionBase mantencionBase) {
		this.mantencionBase = mantencionBase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "id_vehiculo", referencedColumnName = "id_vehiculo", nullable = false),
			@JoinColumn(name = "id_usuario", referencedColumnName = "id_usuario", nullable = false) })
	public Vehiculo getVehiculo() {
		return this.vehiculo;
	}

	public void setVehiculo(Vehiculo vehiculo) {
		this.vehiculo = vehiculo;
	}

	@Column(name = "km")
	public Integer getKm() {
		return this.km;
	}

	public void setKm(Integer km) {
		this.km = km;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", length = 10)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_modificacion", nullable = false, length = 19)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name = "borrado", nullable = false)
	public boolean isBorrado() {
		return this.borrado;
	}

	public void setBorrado(boolean borrado) {
		this.borrado = borrado;
	}

}
