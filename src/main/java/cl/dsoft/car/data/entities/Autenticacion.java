package cl.dsoft.car.data.entities;
// Generated 17-05-2020 20:45:18 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Autenticacion generated by hbm2java
 */
@Entity
@Table(name = "autenticacion", catalog = "car2")
public class Autenticacion implements java.io.Serializable {

	private Long idAutenticacion;
	private RedSocial redSocial;
	private Usuario usuario;
	private String token;
	private Date fecha;
	private Date fechaModificacion;

	public Autenticacion() {
	}

	public Autenticacion(RedSocial redSocial, Usuario usuario, Date fechaModificacion) {
		this.redSocial = redSocial;
		this.usuario = usuario;
		this.fechaModificacion = fechaModificacion;
	}

	public Autenticacion(RedSocial redSocial, Usuario usuario, String token, Date fecha, Date fechaModificacion) {
		this.redSocial = redSocial;
		this.usuario = usuario;
		this.token = token;
		this.fecha = fecha;
		this.fechaModificacion = fechaModificacion;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_autenticacion", unique = true, nullable = false)
	public Long getIdAutenticacion() {
		return this.idAutenticacion;
	}

	public void setIdAutenticacion(Long idAutenticacion) {
		this.idAutenticacion = idAutenticacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_red_social", nullable = false)
	public RedSocial getRedSocial() {
		return this.redSocial;
	}

	public void setRedSocial(RedSocial redSocial) {
		this.redSocial = redSocial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "token", length = 45)
	public String getToken() {
		return this.token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", length = 10)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_modificacion", nullable = false, length = 19)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

}
