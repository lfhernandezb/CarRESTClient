package cl.dsoft.car.data.entities;
// Generated 17-05-2020 20:45:18 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ConsultaProveedor generated by hbm2java
 */
@Entity
@Table(name = "consulta_proveedor", catalog = "car2")
public class ConsultaProveedor implements java.io.Serializable {

	private Integer idConsultaProveedor;
	private MantencionBase mantencionBase;
	private Vehiculo vehiculo;
	private Double latitud;
	private Double longitud;
	private Date fechaModificacion;
	private Set<RespuestaProveedor> respuestaProveedors = new HashSet<RespuestaProveedor>(0);

	public ConsultaProveedor() {
	}

	public ConsultaProveedor(MantencionBase mantencionBase, Vehiculo vehiculo, Date fechaModificacion) {
		this.mantencionBase = mantencionBase;
		this.vehiculo = vehiculo;
		this.fechaModificacion = fechaModificacion;
	}

	public ConsultaProveedor(MantencionBase mantencionBase, Vehiculo vehiculo, Double latitud, Double longitud,
			Date fechaModificacion, Set<RespuestaProveedor> respuestaProveedors) {
		this.mantencionBase = mantencionBase;
		this.vehiculo = vehiculo;
		this.latitud = latitud;
		this.longitud = longitud;
		this.fechaModificacion = fechaModificacion;
		this.respuestaProveedors = respuestaProveedors;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_consulta_proveedor", unique = true, nullable = false)
	public Integer getIdConsultaProveedor() {
		return this.idConsultaProveedor;
	}

	public void setIdConsultaProveedor(Integer idConsultaProveedor) {
		this.idConsultaProveedor = idConsultaProveedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_mantencion_base", nullable = false)
	public MantencionBase getMantencionBase() {
		return this.mantencionBase;
	}

	public void setMantencionBase(MantencionBase mantencionBase) {
		this.mantencionBase = mantencionBase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "id_vehiculo", referencedColumnName = "id_vehiculo", nullable = false),
			@JoinColumn(name = "id_usuario", referencedColumnName = "id_usuario", nullable = false) })
	public Vehiculo getVehiculo() {
		return this.vehiculo;
	}

	public void setVehiculo(Vehiculo vehiculo) {
		this.vehiculo = vehiculo;
	}

	@Column(name = "latitud", precision = 22, scale = 0)
	public Double getLatitud() {
		return this.latitud;
	}

	public void setLatitud(Double latitud) {
		this.latitud = latitud;
	}

	@Column(name = "longitud", precision = 22, scale = 0)
	public Double getLongitud() {
		return this.longitud;
	}

	public void setLongitud(Double longitud) {
		this.longitud = longitud;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_modificacion", nullable = false, length = 19)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "consultaProveedor")
	public Set<RespuestaProveedor> getRespuestaProveedors() {
		return this.respuestaProveedors;
	}

	public void setRespuestaProveedors(Set<RespuestaProveedor> respuestaProveedors) {
		this.respuestaProveedors = respuestaProveedors;
	}

}
